##
# \u914D\u7F6E\u5D4C\u5165\u5F0Fservlet\u5BB9\u5668\uFF0C\u53EF\u4EE5\u5728\u5982application.properties\u6587\u4EF6\u4E2D\u914D\u7F6Eservlet\u5BB9\u5668\u6240\u7528\u7684\u5C5E\u6027
#
# server.port\uFF1Ahttp\u76D1\u542C\u7AEF\u53E3
# server.address: \u8981\u7ED1\u5B9A\u7684\u63A5\u53E3\u5730\u5740
# server.session.persistence: session\u6301\u4E45\u5316
# server.session.timeout\uFF1Asession\u8D85\u65F6\u65F6\u95F4
# server.session.store-dir\uFF1Asession\u6570\u636E\u7684location
# server.session.cookie.*: session-cookie\u914D\u7F6E\u3002
# server.error.path\uFF1Aerror page\u7684\u5730\u5740
# server.ssl.key-store, server.ssl.key-store-password, server.ssl.key-password: ssl\u7684\u914D\u7F6E
# server.compression.enabled: http response\u538B\u7F29
# server.compression.min-response-size\uFF1A\u538B\u7F29\u6240\u9700\u7684\u6700\u5C0Fsize\uFF0C\u9ED8\u8BA4\u65F62048\u5B57\u8282
# server.compression.mime-types\uFF1A\u8981\u538B\u7F29\u7684response content \u7C7B\u578B\u3002\u9ED8\u8BA4\u65F6text/html, text/xml, text/plain, text/css
#
server.port=8888

mybatis.type-aliases-package=com.example.bean
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.config-location=classpath:mybatisConfig.xml
#mybatis.config-location=classpath:mybatis-config.xml

##
# \u8FDE\u63A5\u5230\u4E00\u4E2A\u751F\u4EA7\u73AF\u5883\u6570\u636E\u5E93
# spring.datasource.url=jdbc:mysql://localhost/test
# spring.datasource.username=dbuser
# spring.datasource.password=dbpass
# spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# spring.datasource.type=xxxxxHikariCP
# druid \u8FDE\u63A5\u6C60
#

#logging.path=logs
#logging.file=myLog.log
#
#spring.application.name=myTest

#spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.datasource.driver-class-name = com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://127.0.0.1:3306/boc?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true
spring.datasource.username = root
spring.datasource.password = Mysql_123456
# \u4F7F\u7528Druid\u6570\u636E\u6E90
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

# \u4E0B\u9762\u4E3A\u8FDE\u63A5\u6C60\u7684\u8865\u5145\u8BBE\u7F6E\uFF0C\u5E94\u7528\u5230\u4E0A\u9762\u6240\u6709\u6570\u636E\u6E90\u4E2D
# \u521D\u59CB\u5316\u5927\u5C0F\uFF0C\u6700\u5C0F\uFF0C\u6700\u5927
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# \u914D\u7F6E\u83B7\u53D6\u94FE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
spring.datasource.maxWait=60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u94FE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.timeBetweenEvictionRunsMillis=60000
# \u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# \u6253\u5F00PSCache,\u5E76\u4E14\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource.filters=stat,log4j
# \u901A\u8FC7connectProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# \u5408\u5E76\u591A\u4E2ADruidDataSource\u7684\u76D1\u63A7\u6570\u636E
spring.datasource.useGlobalDataSourceStat=true
#druid end

